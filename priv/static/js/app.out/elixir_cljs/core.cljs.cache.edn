;; Analyzed by ClojureScript 1.7.228
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name elixir-cljs.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, re-frame.core re-frame.core, transit cognitect.transit, cognitect.transit cognitect.transit}, :uses {subscribe re-frame.core, register-sub re-frame.core, dispatch-sync re-frame.core, dispatch re-frame.core, register-handler re-frame.core}, :defs {deserialize {:protocol-inline nil, :meta {:file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([x]))}, :name elixir-cljs.core/deserialize, :variadic false, :file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, serialize {:protocol-inline nil, :meta {:file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([x]))}, :name elixir-cljs.core/serialize, :variadic false, :file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, add-user-form {:protocol-inline nil, :meta {:file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :line 41, :column 8, :end-line 41, :end-column 21, :private true, :arglists (quote ([]))}, :private true, :name elixir-cljs.core/add-user-form, :variadic false, :file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, app-main {:protocol-inline nil, :meta {:file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :line 53, :column 8, :end-line 53, :end-column 16, :private true, :arglists (quote ([]))}, :private true, :name elixir-cljs.core/app-main, :variadic false, :file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :line 57, :column 7, :end-line 57, :end-column 11, :arglists (quote ([]))}, :name elixir-cljs.core/init, :variadic false, :file "C:\\Users\\v-comcda\\.boot\\cache\\tmp\\Users\\v-comcda\\Projects\\elixir\\elixir_cljs\\dlw\\-grrwi1\\elixir_cljs\\core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent.ratom reagent.ratom, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:ws :init :button :config :name :value :type :div :username-value :update-username :on-submit :form :input :json :on-change :add-user :user}, :order [:json :init :ws :username-value :config :update-username :add-user :user :form :on-submit :input :type :value :name :on-change :button :div]}, :doc nil}